<Project>
  <PropertyGroup>
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">True</IsWindows>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">True</IsLinux>
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">True</IsOSX>
    <RuntimeArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</RuntimeArch>
    <RuntimeOS Condition="$(IsWindows) == 'True' And $(RuntimeArch) != 'Arm64'">win-x86</RuntimeOS>
    <RuntimeOS Condition="$(IsWindows) == 'True' And $(RuntimeArch) == 'Arm64'">win-arm64</RuntimeOS>
    <RuntimeOS Condition="$(IsLinux) == 'True'">linux-x64</RuntimeOS>
    <RuntimeOS Condition="$(IsOSX) == 'True' And $(RuntimeArch) == 'X64'">osx-x64</RuntimeOS>
    <RuntimeOS Condition="$(IsOSX) == 'True' And $(RuntimeArch) == 'Arm64'">osx-arm64</RuntimeOS>
    <BeautyBinExt Condition="$(IsWindows) == 'True'">.exe</BeautyBinExt>
    <BeautyBin>"$(MSBuildThisFileDirectory)../tools/$(RuntimeOS)/nbeauty2$(BeautyBinExt)"</BeautyBin>
    <BeautyLibsDir Condition="$(BeautyLibsDir) == ''">libraries</BeautyLibsDir>
    <BeautySharedRuntimeMode Condition="$(BeautySharedRuntimeMode) != 'True'"></BeautySharedRuntimeMode>
    <BeautySharedRuntimeMode Condition="$(BeautySharedRuntimeMode) == 'True'">--srmode</BeautySharedRuntimeMode>
    <BeautyExcludes Condition="$(BeautyExcludes) != ''">"$(BeautyExcludes)"</BeautyExcludes>
    <BeautyHiddens Condition="$(BeautyHiddens) != ''">--hiddens "$(BeautyHiddens)"</BeautyHiddens>
    <BeautyEnableDebugging Condition="$(BeautyEnableDebugging) != 'True'"></BeautyEnableDebugging>
    <BeautyEnableDebugging Condition="$(BeautyEnableDebugging) == 'True'">--enabledebug</BeautyEnableDebugging>
    <BeautyUsePatch Condition="$(BeautyUsePatch) != 'True'"></BeautyUsePatch>
    <BeautyUsePatch Condition="$(BeautyUsePatch) == 'True'">--usepatch</BeautyUsePatch>
    <BeautyNoRuntimeInfo Condition="$(BeautyNoRuntimeInfo) != 'True'"></BeautyNoRuntimeInfo>
    <BeautyNoRuntimeInfo Condition="$(BeautyNoRuntimeInfo) == 'True'">--noruntimeinfo</BeautyNoRuntimeInfo>
    <BeautyNBLoaderVerPolicy Condition="$(BeautyNBLoaderVerPolicy) != ''">--nbloaderverpolicy "$(BeautyNBLoaderVerPolicy)"</BeautyNBLoaderVerPolicy>
    <BeautyAppHostEntry Condition="$(BeautyAppHostEntry) != ''">--apphostentry "$(BeautyAppHostEntry)"</BeautyAppHostEntry>
    <BeautyAppHostDir Condition="$(BeautyAppHostDir) != ''">--apphostdir "$(BeautyAppHostDir)"</BeautyAppHostDir>
    <_BeautyDependsOnForBuild_NetFx Condition="'$(MSBuildRuntimeType)' == 'Full'">AfterBuild;$(BeautyAfterTasks)</_BeautyDependsOnForBuild_NetFx>
    <_BeautyDependsOnForPublish_NetFx Condition="'$(MSBuildRuntimeType)' == 'Full'">Publish;$(BeautyAfterTasks)</_BeautyDependsOnForPublish_NetFx>
    <_BeautyDependsOnForBuild_Core Condition="'$(MSBuildRuntimeType)' == 'Core'">AfterBuild;$(BeautyAfterTasks)</_BeautyDependsOnForBuild_Core>
    <_BeautyDependsOnForPublish_Core Condition="'$(MSBuildRuntimeType)' == 'Core' And '$(_IsAspNetCoreProject)' == 'true'">AfterPublish;$(BeautyAfterTasks)</_BeautyDependsOnForPublish_Core>
    <_BeautyDependsOnForPublish_Core Condition="'$(MSBuildRuntimeType)' == 'Core' And '$(_IsAspNetCoreProject)' != 'true'">Publish;$(BeautyAfterTasks)</_BeautyDependsOnForPublish_Core>
    <BeautyLogLevel Condition="$(BeautyLogLevel) != ''">--loglevel $(BeautyLogLevel)</BeautyLogLevel>
    <BeautyGitCDN Condition="$(BeautyGitCDN) != ''">--gitcdn $(BeautyGitCDN)</BeautyGitCDN>
    <BeautyGitTree Condition="$(BeautyGitTree) != ''">--gittree $(BeautyGitTree)</BeautyGitTree>
  </PropertyGroup>

  <!-- https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2019#provide-backward-compatibility -->
  <Choose>
    <When Condition="'$(MSBuildVersion.Substring(0, 2))' >= 16 Or
    ('$(MSBuildVersion.Substring(0, 2))' == 15 And '$(MSBuildVersion.Substring(3, 1))' >= 8)">
      <PropertyGroup>
        <TaskFactory>RoslynCodeTaskFactory</TaskFactory>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <TaskFactory>CodeTaskFactory</TaskFactory>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <UsingTask
    TaskName="_BeautyDetermineIsPublishing"
    TaskFactory="$(TaskFactory)"
    AssemblyFile="$(MSBuildToolsPath)/Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <Args ParameterType="System.String" Output="true" />
      <IsPublishing ParameterType="System.Boolean" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
<![CDATA[
var CommandLineArgs = Environment.GetCommandLineArgs();
if (CommandLineArgs.Length < 2) {
  IsPublishing = false;
} else {
  IsPublishing = CommandLineArgs[1] == "publish";
}
Args = string.Join(" ", CommandLineArgs);
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="_ShouldBeautyOnBuild" BeforeTargets="PrepareForBuild">
    <PropertyGroup Condition="'$(VisualStudioEdition)' != ''">
      <_BeautyDetermineIsInsideVS>True</_BeautyDetermineIsInsideVS>
    </PropertyGroup>

    <_BeautyDetermineIsPublishing>
      <Output TaskParameter="IsPublishing" PropertyName="_BeautyIsPublishing" />
      <Output TaskParameter="Args" PropertyName="_BeautyEntryArgs" />
    </_BeautyDetermineIsPublishing>

    <PropertyGroup Condition="'$(_BeautyDetermineIsInsideVS)' == 'True' And '$(_BeautyIsPublishing)' != 'True' And '$(PublishProtocol)' != ''">
      <_BeautyIsPublishing>True</_BeautyIsPublishing>
    </PropertyGroup>

    <!-- <Message Text="RuntimeOS: $(RuntimeOS)" Importance="High" /> -->
    <!-- <Message Text="RuntimeArch: $(RuntimeArch)" Importance="High" /> -->
    <!-- <Message Text="Running inside Visual Studio: $(_BeautyDetermineIsInsideVS)" Importance="High" /> -->
    <!-- <Message Text="PublishProtocol: $(PublishProtocol)" Importance="High" /> -->
    <!-- <Message Text="Running is publish task: $(_BeautyIsPublishing)" Importance="High" /> -->
    <!-- <Message Text="Running entry cmd args: $(_BeautyEntryArgs)" Importance="High" /> -->
    <!-- <Message Text="_BeautyDependsOnForBuild_NetFx: $(_BeautyDependsOnForBuild_NetFx)" Importance="High" /> -->
    <!-- <Message Text="_BeautyDependsOnForPublish_NetFx: $(_BeautyDependsOnForPublish_NetFx)" Importance="High" /> -->
    <!-- <Message Text="_BeautyDependsOnForBuild_Core: $(_BeautyDependsOnForBuild_Core)" Importance="High" /> -->
    <!-- <Message Text="_BeautyDependsOnForPublish_Core: $(_BeautyDependsOnForPublish_Core)" Importance="High" /> -->

    <PropertyGroup Condition="'$(_BeautyIsPublishing)' == 'True'">
      <_BeautyOnBuild>False</_BeautyOnBuild>
    </PropertyGroup>

    <PropertyGroup Condition="'$(_BeautyIsPublishing)' == 'False' And '$(BeautyOnPublishOnly)' == 'False'">
      <_BeautyOnBuild>True</_BeautyOnBuild>
    </PropertyGroup>
  </Target>

  <Target Name="NetBeautyOnBuild_Fx" AfterTargets="$(_BeautyDependsOnForBuild_NetFx)" Condition="$(DisableBeauty) != 'True' And '$(_BeautyOnBuild)' == 'True'">
    <ItemGroup>
      <_BeautyPublishDir Include="$(TargetDir)" />
    </ItemGroup>

    <PropertyGroup>
      <BeautyDir>"%(_BeautyPublishDir.FullPath)/."</BeautyDir>
    </PropertyGroup>

    <Exec Command="$(BeautyBin) $(BeautyGitCDN) $(BeautyGitTree) $(BeautyLogLevel) $(BeautySharedRuntimeMode) $(BeautyEnableDebugging) $(BeautyUsePatch) $(BeautyHiddens) $(BeautyNoRuntimeInfo) $(BeautyNBLoaderVerPolicy) $(BeautyAppHostEntry) $(BeautyAppHostDir) $(BeautyDir) $(BeautyLibsDir) $(BeautyExcludes)" />
  </Target>

  <Target Name="NetBeautyOnPublish_Fx" AfterTargets="$(_BeautyDependsOnForPublish_NetFx)" Condition="$(DisableBeauty) != 'True' And '$(_BeautyOnBuild)' != 'True'">
    <ItemGroup>
      <_BeautyPublishDir Include="$(PublishDir)" />
      <_BeautyPublishDir2 Include="$(TargetDir)" />
    </ItemGroup>

    <PropertyGroup>
      <BeautyDir>"%(_BeautyPublishDir.FullPath)/."</BeautyDir>
      <BeautyDir2>"%(_BeautyPublishDir2.FullPath)/."</BeautyDir2>
    </PropertyGroup>

    <Exec Command="$(BeautyBin) $(BeautyGitCDN) $(BeautyGitTree) $(BeautyLogLevel) $(BeautySharedRuntimeMode) $(BeautyEnableDebugging) $(BeautyUsePatch) $(BeautyHiddens) $(BeautyNoRuntimeInfo) $(BeautyNBLoaderVerPolicy) $(BeautyAppHostEntry) $(BeautyAppHostDir) $(BeautyDir) $(BeautyLibsDir) $(BeautyExcludes)" />

    <Exec Condition="'$(BeautyDir2)' != '$(BeautyDir)'" Command="$(BeautyBin) $(BeautyGitCDN) $(BeautyGitTree) $(BeautyLogLevel) $(BeautySharedRuntimeMode) $(BeautyEnableDebugging) $(BeautyUsePatch) $(BeautyHiddens) $(BeautyNoRuntimeInfo) $(BeautyNBLoaderVerPolicy) $(BeautyAppHostEntry) $(BeautyAppHostDir) $(BeautyDir2) $(BeautyLibsDir) $(BeautyExcludes)" />
  </Target>

  <Target Name="NetBeautyOnBuild" AfterTargets="$(_BeautyDependsOnForBuild_Core)" Condition="$(DisableBeauty) != 'True' And '$(_BeautyOnBuild)' == 'True'">
    <PropertyGroup>
      <BeautyDir>"$(TargetDir)/."</BeautyDir>
    </PropertyGroup>

    <Exec Command="$(BeautyBin) $(BeautyGitCDN) $(BeautyGitTree) $(BeautyLogLevel) $(BeautySharedRuntimeMode) $(BeautyEnableDebugging) $(BeautyUsePatch) $(BeautyHiddens) $(BeautyNoRuntimeInfo) $(BeautyNBLoaderVerPolicy) $(BeautyAppHostEntry) $(BeautyAppHostDir) $(BeautyDir) $(BeautyLibsDir) $(BeautyExcludes)" />
  </Target>

  <Target Name="NetBeautyOnPublish" AfterTargets="$(_BeautyDependsOnForPublish_Core)" Condition="$(DisableBeauty) != 'True' And '$(_BeautyOnBuild)' != 'True'">
    <ItemGroup>
      <_BeautyPublishDir Include="$(PublishDir)" />
    </ItemGroup>

    <PropertyGroup>
      <BeautyDir>"%(_BeautyPublishDir.FullPath)/."</BeautyDir>
    </PropertyGroup>

    <Exec Command="$(BeautyBin) $(BeautyGitCDN) $(BeautyGitTree) $(BeautyLogLevel) $(BeautySharedRuntimeMode) $(BeautyEnableDebugging) $(BeautyUsePatch) $(BeautyHiddens) $(BeautyNoRuntimeInfo) $(BeautyNBLoaderVerPolicy) $(BeautyAppHostEntry) $(BeautyAppHostDir) $(BeautyDir) $(BeautyLibsDir) $(BeautyExcludes)" />
  </Target>
</Project>
